# Datasource connection properties
spring.datasource.url=jdbc:mysql://localhost/vrm
spring.datasource.username=vrm
spring.datasource.password=vrm
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.database=MYSQL
logging.level.org.springframework.web=ERROR
logging.level.com.vuelogix=DEBUG
#Port
server.port=9090
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update
#second, minute, hour, day of month, month, day(s) of week
#ref https://riptutorial.com/spring/example/21209/cron-expression
#Caution : Spring cron expression is different from unix cron
hearbeat.cron=*/20000 * * * * *
restartFailedRecording.cron=*/3000 * * * * *
#
#View recorder related configs
recordingScheduler.cron=*/10 * * * * *
endDateTimeAdd.sec=5
#
# View recorder related configs
vr.base.url=http://localhost:8070/vr
vr.startrecording.path=/api/v1/recording/start
vr.heartbeat.path=/api/v1/recording/heartbeat/all
vr.video.path=/api/v1/recording/videos
vr.restartFailedRecording.path=/api/v1/recording/restartFailed
#
#
#
# View Secure related config
vs.base.url=http://localhost:3000
vs.heartbeat.path=/heartbeat
# the heartbeat will fetch the recording status which where last updated these many hours
vs.heartbeat.interval.hour=4
# use this style to over ride the properties in production , java -jar app.jar --spring.config.location=classpath:/another-location.properties
#configs to connect to a secured server
spring.boot.admin.client.url=http://localhost:8080
#spring.boot.admin.client.instance.service-base-url=http://localhost:8081
spring.boot.admin.client.username=admin
spring.boot.admin.client.password=admin
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
spring.application.name=Vue Recording Manager

